---
name: 'deploy'

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master

jobs:
  publish-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}

      ## This example show how to use a moving tag "latest".
      ## To prevent docker using a cached image you need to add "--no-cache --pull" build arguments to your app:
      ## `dokku docker-options:add app build "--no-cache --pull"`
      ##
      # - name: Build and push docker image using latest tag
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     platforms: linux/amd64
      #     tags: ghcr.io/${{ github.repository }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [publish-docker-image]
    steps:
      - name: Create deploy repo
        id: deploy_repo
        run: |
          echo "FROM $IMAGE_URL" > Dockerfile
          git init
          git config user.email "user@example.com"
          git config user.name "Your Name"
          git add Dockerfile
          git commit -m "Add Dockerfile"
          commit=$(git rev-parse HEAD 2>/dev/null || true)
          echo ::set-output name=commit_sha::$commit
        env:
          IMAGE_URL: ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Push to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: 'ssh://dokku@dokku.me:22/appname'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          git_push_flags: '--force'
          ci_commit: ${{ steps.deploy_repo.outputs.commit_sha }}
